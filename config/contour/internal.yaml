apiVersion: v1
kind: ConfigMap
metadata:
  name: contour-internal
  namespace: projectcontour
data:
  contour.yaml: |
    disablePermitInsecure: false
    leaderelection:
      configmap-name: leader-elect-internal
      configmap-namespace: projectcontour
    ### Logging options
    accesslog-format: envoy
---
apiVersion: v1
kind: Service
metadata:
  name: contour-internal
  namespace: projectcontour
spec:
  ports:
  - name: xds
    port: 8001
    targetPort: 8011
  selector:
    app: contour
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: envoy-internal
  namespace: projectcontour
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: envoy-internal
  type: ClusterIP



---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: envoy-internal
  name: envoy-internal
  namespace: projectcontour
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      app: envoy-internal
  template:
    metadata:
      labels:
        app: envoy-internal
    spec:
      initContainers:
      - name: envoy-initconfig
        image: github.com/mattmoor/net-contour/vendor/github.com/projectcontour/contour/cmd/contour
        imagePullPolicy: IfNotPresent
        args:
        - bootstrap
        - /config/envoy.json
        - --xds-address=contour-internal
        - --xds-port=8001
        - --envoy-cafile=/ca/cacert.pem
        - --envoy-cert-file=/certs/tls.crt
        - --envoy-key-file=/certs/tls.key
        volumeMounts:
        - name: envoy-internal-config
          mountPath: /config
        - name: envoycert
          mountPath: /certs
          readOnly: true
        - name: cacert
          mountPath: /ca
          readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace

      containers:
      - name: envoy
        image: docker.io/envoyproxy/envoy:v1.12.2
        imagePullPolicy: IfNotPresent
        command:
        - envoy
        args:
        - -c
        - /config/envoy.json
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - name: http
          containerPort: 80
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
          - name: envoy-internal-config
            mountPath: /config
          - name: envoycert
            mountPath: /certs
          - name: cacert
            mountPath: /ca
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - -c
              - --
              - echo
              - -ne
              - "POST /healthcheck/fail HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n"
              - '>/dev/tcp/localhost/9001'
      automountServiceAccountToken: false
      volumes:
        - name: envoy-internal-config
          emptyDir: {}
        - name: envoycert
          secret:
            secretName: envoycert
        - name: cacert
          secret:
            secretName: cacert
      restartPolicy: Always
